// -----------------------------------------------
// This file is part of the LayerCake Generator.
// 
// Copyright (c) 2012, 2015 LayerCake Generator.
// http://www.layercake-generator.net
// -----------------------------------------------

namespace System
{
	using System.Text;
	using System.Web.Security;

	/// <summary>
	/// Provides a way to encrypt or hash data (or both) by using the same algorithms and key values that are used for ASP.NET forms authentication and view state.
	/// </summary>
	public static class MachineKeyHelper
	{
		#region [ Members ]

		/// <summary>
		/// String used to decipher the returned ciphertext.
		/// The value is unique and it is generated by LayerCake Cooker when deploying the solution.
		/// </summary>
		private static readonly string _salt = "223C1615-6766-432D-AE30-87B8ADBA9636";

		#endregion

		#region [ Methods ]

		/// <summary>
		/// Encrypts the value.
		/// </summary>
		///
		/// <param name="value">
		/// Value to encrypt.
		/// </param>
		///
		/// <param name="salt">
		/// Additional input to encrypt the value.
		/// </param>
		///
		/// <returns>
		/// The encrypted value.
		/// </returns>
		public static string Protect(string value, string salt = null)
		{
			salt += _salt;

			var cookieText = Encoding.UTF8.GetBytes(value);
			return Convert.ToBase64String(MachineKey.Protect(cookieText, salt));
		}

		/// <summary>
		/// Decrypts.
		/// </summary>
		///
		/// <param name="value">
		/// Value to decrypt.
		/// </param>
		///
		/// <param name="salt">
		/// Additional input to decrypt the value.
		/// </param>
		///
		/// <returns>
		/// The decrypted value.
		/// </returns>
		public static string Unprotect(string encryptedValue, string salt = null)
		{
			salt += _salt;

			var buffer = Convert.FromBase64String(encryptedValue);
			buffer = MachineKey.Unprotect(buffer, salt);

			return Encoding.UTF8.GetString(buffer);
		}

		#endregion
	}
}
