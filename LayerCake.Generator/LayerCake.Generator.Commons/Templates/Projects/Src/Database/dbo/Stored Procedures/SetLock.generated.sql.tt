<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ parameter name="Context" type="LayerCake.Generator.Commons.TextTemplatingProcessContext" #>
<#@ include file="Commons/Includes.ttinclude" #>
-- ------------------------------------------------------------------------------ 
-- <auto-generated> 
-- This code was generated by LayerCake Generator v3.7.1.
-- http://www.layercake-generator.net
-- 
-- Changes to this file may cause incorrect behavior AND WILL BE LOST IF 
-- the code is regenerated. 
-- </auto-generated> 
-- ------------------------------------------------------------------------------

CREATE PROCEDURE <#=Context.Table.Name#>_SetLock
(
	@<#=Context.Table.Name#>_Id BIGINT,
	@<#=Context.Table.Name#>_IsLocked BIT,

	@CtxUser BIGINT = NULL,
	@CtxCulture VARCHAR(2) = N'<#=Context.ProcessorContext.Culture.Default#>',
	@CtxWithContextSecurity BIT = N'True'
)
AS
BEGIN

	SET NOCOUNT ON;
	SET XACT_ABORT ON;

	BEGIN TRY
		BEGIN TRANSACTION;

			DECLARE @V_COUNTER INT = 1;

			IF @CtxWithContextSecurity = N'True'
			BEGIN

				SELECT	@V_COUNTER = COUNT(0)
				FROM	[<#=Context.Table.Name#>] <#=WithNoLockOption(Context.ProcessorContext)#>
				WHERE	[<#=Context.Table.Name#>].[<#=Context.Table.Name#>_Id] = @<#=Context.Table.Name#>_Id AND [<#=Context.Table.Name#>].[<#=Context.Table.Name#>_Owner] = @CtxUser;

			END

			IF @V_COUNTER = 0
			BEGIN

				IF NOT(EXISTS(	SELECT	1
								FROM	[<#=Context.Table.Name#>] <#=WithNoLockOption(Context.ProcessorContext)#>
								WHERE	[<#=Context.Table.Name#>].[<#=Context.Table.Name#>_Id] = @<#=Context.Table.Name#>_Id AND [<#=Context.Table.Name#>].[<#=Context.Table.Name#>_Owner] != @CtxUser))
				BEGIN

					RAISERROR(N'EntityNotFoundException on <#=Context.Table.Name#>.<#=Context.Table.Name#>Id = ''%s''', 16, 1, @<#=Context.Table.Name#>_Id);
					RETURN (@@ROWCOUNT);

				END
				ELSE
				BEGIN

					DECLARE @V_OWNER BIGINT;
					SELECT @V_OWNER = [<#=Context.Table.Name#>].[<#=Context.Table.Name#>_Owner] FROM [<#=Context.Table.Name#>] <#=WithNoLockOption(Context.ProcessorContext)#> WHERE [<#=Context.Table.Name#>].[<#=Context.Table.Name#>_Id] = @<#=Context.Table.Name#>_Id;

					IF @V_OWNER != 0
					BEGIN
					
						RAISERROR(N'OwnerException on <#=Context.Table.Name#>.Id = %I64d (Owner = %I64d, Requested User = %I64d)', 16, 1, @<#=Context.Table.Name#>_Id, @V_OWNER, @CtxUser);
						RETURN (@@ROWCOUNT);

					END
				END

			END

			UPDATE
				[<#=Context.Table.Name#>]
			SET
				[<#=Context.Table.Name#>].[<#=Context.Table.Name#>_IsLocked] = @<#=Context.Table.Name#>_IsLocked,
				[<#=Context.Table.Name#>].[<#=Context.Table.Name#>_ModifiedOn] = GETDATE(),
				[<#=Context.Table.Name#>].[<#=Context.Table.Name#>_ModifiedBy] = @CtxUser
			WHERE
				[<#=Context.Table.Name#>].[<#=Context.Table.Name#>_Id] = @<#=Context.Table.Name#>_Id;

		COMMIT TRANSACTION;

		SELECT	*
		FROM	[<#=Context.Table.Name#>] <#=WithNoLockOption(Context.ProcessorContext)#>
		WHERE	[<#=Context.Table.Name#>].[<#=Context.Table.Name#>_Id] = @<#=Context.Table.Name#>_Id;

		RETURN (@@ROWCOUNT);

	END TRY
	BEGIN CATCH

		IF XACT_STATE() != 0
		BEGIN
			ROLLBACK TRANSACTION;
		END

		DECLARE @V_NOW DATETIME2(3) = GETDATE();
		DECLARE @V_ERROR_MESSAGE VARCHAR(MAX) = ERROR_MESSAGE();
		DECLARE @V_ERROR_SEVERITY INT = ERROR_SEVERITY();
		DECLARE @V_ERROR_STATE INT = ERROR_STATE();

		-- RAISE() must be called before EXEC [ProcessErrorLog_Save] in order to get the error
		-- on the first result in the SqlDataReader (Save stored procedures return 1 row).

		RAISERROR(@V_ERROR_MESSAGE, @V_ERROR_SEVERITY, @V_ERROR_STATE);

		EXEC [ProcessErrorLog_Save]
			 @ProcessErrorLog_Date = @V_NOW,
			 @ProcessErrorLog_ProcedureName = N'<#=Context.Table.Name#>_SetLock',
			 @ProcessErrorLog_ErrorMessage = @V_ERROR_MESSAGE,
			 @ProcessErrorLog_ErrorSeverity = @V_ERROR_SEVERITY,
			 @ProcessErrorLog_ErrorState = @V_ERROR_STATE,
			 @ProcessErrorLog_Data = NULL,
			 @CtxUser = @CtxUser,
			 @CtxCulture = @CtxCulture,
			 @CtxWithContextSecurity = @CtxWithContextSecurity;

		RETURN (@@ROWCOUNT);

	END CATCH
END