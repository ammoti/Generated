// -----------------------------------------------
// This file is part of the LayerCake Generator.
// 
// Copyright (c) 2012, 2015 LayerCake Generator.
// http://www.layercake-generator.net
// -----------------------------------------------

namespace VahapYigit.Test.Core
{
	using System;
	using System.Diagnostics;
	using System.Runtime.Serialization;

	/// <summary>
	/// Implements the IUserContext interface.
	/// The other class is MemberContext.
	/// </summary>
	[Serializable]
	[DataContract(Namespace = Globals.Namespace, IsReference = true)]
	[DebuggerDisplay("Id = {Id}, Identifier = {Identifier}, Culture = {Culture}")]
	public class ClientContext : IUserContext
	{
		#region [ Constructors ]

		/// <summary>
		/// Default constructor.
		/// </summary>
		public ClientContext()
		{
			this.Id = 0;
			this.Culture = Cultures.Default;
			this.Options = UserContextOptions.Default;
		}

		/// <summary>
		/// Constructor.
		/// </summary>
		/// 
		/// <param name="identifier">
		/// Identifier of the user (Username, Email, etc).
		/// </param>
		/// 
		/// <param name="password">
		/// Password of the user.
		/// </param>
		public ClientContext(string identifier, string password)
			: this(0, identifier, password)
		{
		}

		/// <summary>
		/// Constructor.
		/// </summary>
		/// 
		/// <param name="id">
		/// ID of the user (if authenficated).
		/// </param>
		/// 
		/// <param name="identifier">
		/// Identifier of the user (Username, Email, etc).
		/// </param>
		/// 
		/// <param name="password">
		/// Password of the user.
		/// </param>
		public ClientContext(long id, string identifier, string password)
			: this()
		{
			this.Id = id;
			this.Identifier = identifier;
			this.Password = password;
		}

		/// <summary>
		/// Constructor.
		/// </summary>
		/// 
		/// <param name="id">
		/// ID of the user (if authenficated).
		/// </param>
		/// 
		/// <param name="identifier">
		/// Identifier of the user.
		/// </param>
		/// 
		/// <param name="password">
		/// Password of the user.
		/// </param>
		/// 
		/// <param name="culture">
		/// Culture of the user.
		/// </param>
		public ClientContext(long id, string identifier, string password, string culture)
			: this(id, identifier, password)
		{
			this.Culture = culture;
		}

		#endregion

		#region [ IUserContext Implementation ]

		[DataMember]
		public long Id { get; set; }

		[DataMember]
		public string Identifier { get; set; }

		[DataMember]
		public string Password { get; set; }

		[DataMember]
		public string Culture { get; set; }

		[DataMember]
		public UserContextOptions Options { get; set; }

		#endregion

		#region [ ICloneable Implementation ]

		public object Clone()
		{
			IUserContext userContext = new ClientContext(
				this.Id,
				(string)this.Identifier.Clone(),
				(string)this.Password.Clone(),
				(string)this.Culture.Clone());

			userContext.Options = new UserContextOptions
			{
				RetrieveCurrentLanguageOnly = this.Options.RetrieveCurrentLanguageOnly,
				WithContextSecurity = this.Options.WithContextSecurity
			};

			return userContext;
		}

		#endregion

		#region [ Static Methods ]

		/// <summary>
		/// Gets a ClientContext instance for anonymous DB access. Used when the user context is neither set nor required.
		/// </summary>
		public static IUserContext Anonymous
		{
			get { return new ClientContext(string.Empty, string.Empty); }
		}

		/// <summary>
		/// Gets a ClientContext instance for service DB access (on server-side).
		/// </summary>
		public static IUserContext Server
		{
			get
			{
				return new ClientContext(
					-10001,
					"server",
					"B9AC446B-729C-476B-809A-4D1A5E271B54" /* this value is unique and it is generated by LayerCake Cooker when deploying the solution.*/);
			}
		}

		/// <summary>
		/// Gets a ClientContext instance for admin DB access.
		/// </summary>
		public static IUserContext Admin
		{
			get
			{
				return new ClientContext(
					-10002,
					"admin",
					"B9AC446B-729C-476B-809A-4D1A5E271B54" /* this value is unique and it is generated by LayerCake Cooker when deploying the solution.*/);
			}
		}

		#endregion
	}
}
