<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ parameter name="Context" type="LayerCake.Generator.Commons.TextTemplatingProcessContext" #>
<#@ include file="Commons/Includes.ttinclude"#>
<# 
	int cultureCount = Context.ProcessorContext.Culture.SupportedCultures.Length;
#>
-- ------------------------------------------------------------------------------ 
-- <auto-generated> 
-- This code was generated by LayerCake Generator v3.7.1.
-- http://www.layercake-generator.net
-- 
-- Changes to this file may cause incorrect behavior AND WILL BE LOST IF 
-- the code is regenerated. 
-- </auto-generated> 
-- ------------------------------------------------------------------------------

-- DO NOT ADD THIS FILE TO THE DATABASE PROJECT!

-- NOTE: this script is executed on the target database when generated.

<#
	foreach (var table in Context.Schema.Tables)
	{
		foreach (var column in table.Columns)
		{
			if (column.IsIdColumn || column.IsOwnershipColumn)
			{
				continue;
			}

#>
<#
			if (!column.IsNullable)
			{
#>
INSERT INTO [Translation] ([Translation_Key], <# for (int j = 0; j < cultureCount; j++) { #>[Translation_Value_<#=Context.ProcessorContext.Culture.SupportedCultures[j]#>]<#if (j < cultureCount - 1) { #>, <# } } #>) SELECT 'Model<#=table.Name#><#=column.CSharpPropertyName#>IsRequired', <# for (int j = 0; j < cultureCount; j++) { #>'<#=Context.ProcessorContext.Culture.SupportedCultures[j]#>_Model<#=table.Name#><#=column.CSharpPropertyName#>IsRequired'<#if (j < cultureCount - 1) { #>, <# } } #> WHERE NOT(EXISTS(SELECT * FROM [Translation] WHERE [Translation_Key] = 'Model<#=table.Name#><#=column.CSharpPropertyName#>IsRequired'));
GO
<#
			}
#>
INSERT INTO [Translation] ([Translation_Key], <# for (int j = 0; j < cultureCount; j++) { #>[Translation_Value_<#=Context.ProcessorContext.Culture.SupportedCultures[j]#>]<#if (j < cultureCount - 1) { #>, <# } } #>) SELECT 'Model<#=table.Name#><#=column.CSharpPropertyName#>BadValueOrFormat', <# for (int j = 0; j < cultureCount; j++) { #>'<#=Context.ProcessorContext.Culture.SupportedCultures[j]#>_Model<#=table.Name#><#=column.CSharpPropertyName#>BadValueOrFormat'<#if (j < cultureCount - 1) { #>, <# } } #> WHERE NOT(EXISTS(SELECT * FROM [Translation] WHERE [Translation_Key] = 'Model<#=table.Name#><#=column.CSharpPropertyName#>BadValueOrFormat'));
GO
<#
		}
	}

	foreach (var table in Context.Schema.Tables.Where(t => t.Constraints != null))
	{
		foreach (var constraint in table.Constraints)
		{
			string idTranslationSuffix = null;
			foreach (var column in constraint.Columns)
			{
				if (idTranslationSuffix == null) { idTranslationSuffix = column.NameWithoutTableName; }
				else { idTranslationSuffix = string.Format("{0}_{1}", idTranslationSuffix, column.NameWithoutTableName); }
			}
#>
INSERT INTO [Translation] ([Translation_Key], <# for (int j = 0; j < cultureCount; j++) { #>[Translation_Value_<#=Context.ProcessorContext.Culture.SupportedCultures[j]#>]<#if (j < cultureCount - 1) { #>, <# } } #>) SELECT 'Crud<#=table.Name#><#=idTranslationSuffix#>UniqueConstraint', <# for (int j = 0; j < cultureCount; j++) { #>'<#=Context.ProcessorContext.Culture.SupportedCultures[j]#>_Crud<#=table.Name#><#=idTranslationSuffix#>UniqueConstraint'<#if (j < cultureCount - 1) { #>, <# } } #> WHERE NOT(EXISTS(SELECT * FROM [Translation] WHERE [Translation_Key] = 'Crud<#=table.Name#><#=idTranslationSuffix#>UniqueConstraint'));
GO
<#
		}
	}

#>