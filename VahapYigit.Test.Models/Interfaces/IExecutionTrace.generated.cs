//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by LayerCake Generator v3.7.1.
// http://www.layercake-generator.net
// 
// Changes to this file may cause incorrect behavior AND WILL BE LOST IF 
// the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------

namespace VahapYigit.Test.Models
{
	using System;

	using VahapYigit.Test.Core;

	[System.CodeDom.Compiler.GeneratedCode("LayerCake Generator", "3.7.1")]
	public partial interface IExecutionTrace : IEntity
	{
		#region [ Properties ]

		/// <summary>
		/// Gets or sets the Module value (MANDATORY). 
		/// </summary>
		string Module { get; set; }

		/// <summary>
		/// Gets or sets the ClassName value (MANDATORY). 
		/// </summary>
		string ClassName { get; set; }

		/// <summary>
		/// Gets or sets the MethodName value (MANDATORY). 
		/// </summary>
		string MethodName { get; set; }

		/// <summary>
		/// Gets or sets the Tag value (OPTIONAL). 
		/// </summary>
		string Tag { get; set; }

		/// <summary>
		/// Gets or sets the MinDuration value (MANDATORY). Minimal duration (in millisecond)
		/// </summary>
		int MinDuration { get; set; }

		/// <summary>
		/// Gets or sets the MaxDuration value (MANDATORY). Maximal duration (in millisecond)
		/// </summary>
		int MaxDuration { get; set; }

		/// <summary>
		/// Gets or sets the TotalDuration value (MANDATORY). Total duration (in millisecond)
		/// </summary>
		long TotalDuration { get; set; }

		/// <summary>
		/// Gets or sets the Counter value (MANDATORY). 
		/// </summary>
		long Counter { get; set; }

		/// <summary>
		/// Gets or sets the LastCall value (MANDATORY). 
		/// </summary>
		DateTime LastCall { get; set; }


		#endregion
	}
	
	[System.CodeDom.Compiler.GeneratedCode("LayerCake Generator", "3.7.1")]
	public static partial class IExecutionTraceExtensions
	{
		public static void MapFrom(this IExecutionTrace target, IExecutionTrace source)
		{
			if (source != null)
			{
				if (target != null)
				{
					target.Module = source.Module;
					target.ClassName = source.ClassName;
					target.MethodName = source.MethodName;
					target.Tag = source.Tag;
					target.MinDuration = source.MinDuration;
					target.MaxDuration = source.MaxDuration;
					target.TotalDuration = source.TotalDuration;
					target.Counter = source.Counter;
					target.LastCall = source.LastCall;
				}
			}
		}

		public static void MapTo(this IExecutionTrace source, IExecutionTrace target)
		{
			target.MapFrom(source);
		}
	}
}