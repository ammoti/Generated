//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by LayerCake Generator v3.7.1.
// http://www.layercake-generator.net
// 
// Changes to this file WILL NOT BE LOST if the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------

namespace VahapYigit.Test.Models
{
	using System;
	using System.Text.RegularExpressions;

	using VahapYigit.Test.Core;

	public partial class User
	{
		#region [ Initialize Method ]

		/// <summary>
		/// Initialize the object when the instance is created.
		/// </summary>
		protected override void Initialize()
		{
			base.Initialize();

			// Enter your custom code here...
		}

		#endregion

		#region [ Calculated Properties ]



		#endregion

		#region [ Validation Methods ]

		partial void OnPasswordValidation(ref TranslationEnum? error)
		{
			// -> For example

			//if (this.Password == this.Username)
			//{
			//	error = TranslationEnum.ModelUserPasswordBadValueOrFormat;
			//}
		}

		partial void OnEmailValidation(ref TranslationEnum? error)
		{
			// -> For example

			//if (!ValidationHelper.IsEmailAddress(this.Email))
			//{
			//	error = TranslationEnum.ModelUserEmailBadValueOrFormat;
			//}
		}

		partial void OnPasswordResponseValidation(ref TranslationEnum? error)
		{
			// -> For example

			//if (this.PasswordResponse == this.Username)
			//{
			//	error = TranslationEnum.ModelUserPasswordResponseBadValueOrFormat;
			//}
		}

		partial void OnCultureValidation(ref TranslationEnum? error)
		{
			if (!Cultures.IsSupported(this.Culture))
			{
				error = TranslationEnum.ModelUserCultureBadValueOrFormat;
			}

			if (this.Culture.Length != 2)
			{
				System.Diagnostics.Debugger.Break();

				// The Culture must be 2 characters long

				error = TranslationEnum.ModelUserCultureBadValueOrFormat;
			}

		}

		#endregion

		#region [ OnPropertyChanged ]

		protected override void OnPropertyChanged(string propertyName)
		{
			if (propertyName == User.PropertyNames.Culture)
			{
				if (this.Culture != null)
				{
					this.Culture = this.Culture.Replace("-", "");
				}
			}

		}

		#endregion
	}

	public static class UserExtensions
	{
		// Enter your custom extensions methods here...
	}
}