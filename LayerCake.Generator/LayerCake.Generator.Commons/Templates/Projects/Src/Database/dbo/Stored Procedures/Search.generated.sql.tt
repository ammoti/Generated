<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ parameter name="Context" type="LayerCake.Generator.Commons.TextTemplatingProcessContext" #>
<#@ include file="Commons/Includes.ttinclude" #>
-- ------------------------------------------------------------------------------ 
-- <auto-generated> 
-- This code was generated by LayerCake Generator v3.7.1.
-- http://www.layercake-generator.net
-- 
-- Changes to this file may cause incorrect behavior AND WILL BE LOST IF 
-- the code is regenerated. 
-- </auto-generated> 
-- ------------------------------------------------------------------------------

CREATE PROCEDURE <#=Context.Table.Name#>_Search
(
	@Filter VARCHAR(MAX) = NULL,
	@OrderBy VARCHAR(1024) = NULL,
	@MaxRecords INT,

	@CtxWithPaging BIT = N'False',
	@CtxPagingCurrentPage INT = 1,
	@CtxPagingRecordsPerPage INT = 50,

	@CtxUser BIGINT = NULL,
	@CtxCulture VARCHAR(2) = N'<#=Context.ProcessorContext.Culture.Default#>',
	@CtxWithContextSecurity BIT =  N'True'
)
AS
BEGIN

	SET NOCOUNT ON;

	DECLARE @V_STATEMENT_DATA VARCHAR(MAX) = N'';
	DECLARE @V_STATEMENT_TOTAL_RECORDS VARCHAR(MAX) = N'';

	BEGIN TRY

		IF @CtxWithPaging = N'True'
		BEGIN

			IF @CtxPagingCurrentPage < 1 BEGIN SET @CtxPagingCurrentPage = 1 END;
			IF @CtxPagingRecordsPerPage < 1 BEGIN SET @CtxPagingRecordsPerPage = 50 END;

			DECLARE @V_LASTROW INT = @CtxPagingCurrentPage * @CtxPagingRecordsPerPage;
			DECLARE @V_FIRSTROW INT = @V_LASTROW - @CtxPagingRecordsPerPage + 1;

			SET @V_STATEMENT_DATA = N'WITH PagedRows AS ( ';

			IF @Filter IS NOT NULL AND @OrderBy IS NOT NULL
			BEGIN
				SET @V_STATEMENT_DATA = @V_STATEMENT_DATA + N'SELECT *, ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + N') AS RowNumber FROM [<#=Context.Table.Name#>] <#=WithNoLockOption(Context.ProcessorContext)#> WHERE ' + @Filter;
			END
			ELSE IF @Filter IS NOT NULL
			BEGIN
				SET @V_STATEMENT_DATA = @V_STATEMENT_DATA + N'SELECT *, ROW_NUMBER() OVER (ORDER BY [<#=Context.Table.Name#>_Id]) AS RowNumber FROM [<#=Context.Table.Name#>] <#=WithNoLockOption(Context.ProcessorContext)#> WHERE ' + @Filter;
			END
			ELSE IF @OrderBy IS NOT NULL
			BEGIN
				SET @V_STATEMENT_DATA = @V_STATEMENT_DATA + N'SELECT *, ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + N') AS RowNumber FROM [<#=Context.Table.Name#>] <#=WithNoLockOption(Context.ProcessorContext)#>';
			END
			ELSE
			BEGIN
				SET @V_STATEMENT_DATA = @V_STATEMENT_DATA + N'SELECT *, ROW_NUMBER() OVER (ORDER BY [<#=Context.Table.Name#>_Id]) AS RowNumber FROM [<#=Context.Table.Name#>] <#=WithNoLockOption(Context.ProcessorContext)#>';
			END
			SET @V_STATEMENT_DATA = @V_STATEMENT_DATA + N' ) SELECT * FROM PagedRows <#=WithNoLockOption(Context.ProcessorContext)#> WHERE RowNumber BETWEEN ' + CAST(@V_FIRSTROW AS VARCHAR(12)) + N' AND ' + CAST(@V_LASTROW AS VARCHAR(12));

		END
		ELSE
		BEGIN

			IF @Filter IS NOT NULL AND @OrderBy IS NOT NULL
			BEGIN
				SET @V_STATEMENT_DATA = N'SELECT TOP ' + CAST(@MaxRecords AS VARCHAR) + N' * FROM [<#=Context.Table.Name#>] <#=WithNoLockOption(Context.ProcessorContext)#> WHERE  ' + @Filter + N' ORDER BY ' + @OrderBy;
			END
			ELSE IF @Filter IS NOT NULL
			BEGIN
				SET @V_STATEMENT_DATA = N'SELECT TOP ' + CAST(@MaxRecords AS VARCHAR) + N' * FROM [<#=Context.Table.Name#>] <#=WithNoLockOption(Context.ProcessorContext)#> WHERE ' + @Filter;
			END
			ELSE IF @OrderBy IS NOT NULL
			BEGIN
				SET @V_STATEMENT_DATA = N'SELECT TOP ' + CAST(@MaxRecords AS VARCHAR) + N' * FROM [<#=Context.Table.Name#>] <#=WithNoLockOption(Context.ProcessorContext)#> ORDER BY ' + @OrderBy;
			END
			ELSE
			BEGIN
				SET @V_STATEMENT_DATA = N'SELECT TOP ' + CAST(@MaxRecords AS VARCHAR) + N' * FROM [<#=Context.Table.Name#>] <#=WithNoLockOption(Context.ProcessorContext)#>';
			END

		END

		SET @V_STATEMENT_TOTAL_RECORDS = 'SELECT COUNT(0) AS TotalRecords FROM [<#=Context.Table.Name#>] <#=WithNoLockOption(Context.ProcessorContext)#>';

		IF @Filter IS NOT NULL
		BEGIN
			SET @V_STATEMENT_TOTAL_RECORDS = @V_STATEMENT_TOTAL_RECORDS + N' WHERE ' + @Filter;
		END

		EXEC (@V_STATEMENT_DATA);
		EXEC (@V_STATEMENT_TOTAL_RECORDS);

	END TRY
	BEGIN CATCH

		DECLARE @V_NOW DATETIME2(3) = GETDATE();
		DECLARE @V_ERROR_MESSAGE VARCHAR(MAX) = @V_STATEMENT_DATA + N' -> ' + ERROR_MESSAGE();
		DECLARE @V_ERROR_SEVERITY INT = ERROR_SEVERITY();
		DECLARE @V_ERROR_STATE INT = ERROR_STATE();

		-- RAISE() must be called before EXEC [ProcessErrorLog_Save] in order to get the error
		-- on the first result in the SqlDataReader (Save stored procedures return 1 row).

		RAISERROR(@V_ERROR_MESSAGE, @V_ERROR_SEVERITY, @V_ERROR_STATE);

		EXEC [ProcessErrorLog_Save]
			 @ProcessErrorLog_Date = @V_NOW,
			 @ProcessErrorLog_ProcedureName = N'<#=Context.Table.Name#>_Search',
			 @ProcessErrorLog_ErrorMessage = @V_ERROR_MESSAGE,
			 @ProcessErrorLog_ErrorSeverity = @V_ERROR_SEVERITY,
			 @ProcessErrorLog_ErrorState = @V_ERROR_STATE,
			 @ProcessErrorLog_Data = @V_STATEMENT_DATA,
			 @CtxUser = @CtxUser,
			 @CtxCulture = @CtxCulture,
			 @CtxWithContextSecurity = @CtxWithContextSecurity;

		RETURN (@@ROWCOUNT);

	END CATCH
END