//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by LayerCake Generator v3.7.1.
// http://www.layercake-generator.net
// 
// Changes to this file may cause incorrect behavior AND WILL BE LOST IF 
// the code is regenerated. 
// </auto-generated> 
//-----------------------------------------------------------------------------

namespace VahapYigit.Test.Services
{
	using System;
	using System.ServiceModel;
	using System.ServiceModel.Activation;
	using System.Threading.Tasks;
	using System.Transactions;
	using System.Xml;
	
	using VahapYigit.Test.Business;
	using VahapYigit.Test.Contracts;
	using VahapYigit.Test.Core;
	using VahapYigit.Test.Crud;

	/// <summary>
	/// AuthenticationService Service.
	/// </summary>
	[ServiceBehavior(InstanceContextMode = InstanceContextMode.PerSession)]
	[AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]
	[System.CodeDom.Compiler.GeneratedCode("LayerCake Generator", "3.7.1")]
	[System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage()]
	public partial class AuthenticationService : IAuthenticationService
	{
		#region [ IService Implementation ]
		
		bool IService.WakeUp(IUserContext userContext)
		{
			return true;
		}

		async Task<bool> IService.WakeUpAsync(IUserContext userContext)
		{
			return await Task.Factory.StartNew(() => true);
		}

		#endregion

		#region [ IAuthenticationService Business Implementation ]
		#pragma warning disable 1591 // Disable 'missing XML comment for publicly visible type or member' warnings

		public bool IsUsernameUsed(VahapYigit.Test.Core.IUserContext userContext, string username)
		{
			using (var et = new ExecutionTracerService())
			{
				var business = new AuthenticationBusiness();
				return business.IsUsernameUsed(userContext, username);
			}
		}

		public bool IsEmailUsed(VahapYigit.Test.Core.IUserContext userContext, string email)
		{
			using (var et = new ExecutionTracerService())
			{
				var business = new AuthenticationBusiness();
				return business.IsEmailUsed(userContext, email);
			}
		}

		public bool IsRegistered(VahapYigit.Test.Core.IUserContext userContext, out VahapYigit.Test.Models.User user)
		{
			using (var et = new ExecutionTracerService())
			{
				var business = new AuthenticationBusiness();
				return business.IsRegistered(userContext, out user);
			}
		}

		public bool Create(VahapYigit.Test.Core.IUserContext userContext, ref VahapYigit.Test.Models.User user, out System.Collections.Generic.IList<VahapYigit.Test.Core.TranslationEnum> errors)
		{
			using (var et = new ExecutionTracerService())
			{
				var business = new AuthenticationBusiness();
				return business.Create(userContext, ref user, out errors);
			}
		}

		public string ResetPassword(VahapYigit.Test.Core.IUserContext userContext, string email, string passwordResponse)
		{
			using (var et = new ExecutionTracerService())
			{
				var business = new AuthenticationBusiness();
				return business.ResetPassword(userContext, email, passwordResponse);
			}
		}

		#pragma warning restore 1591
		#endregion
	}
}