<Window
	x:Class="LayerCake.Generator.Views.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:views="clr-namespace:LayerCake.Generator.Views"
	xmlns:viewModels="clr-namespace:LayerCake.Generator.ViewModels"
	xmlns:controls="clr-namespace:LayerCake.Generator.UI.Controls;assembly=LayerCake.Generator.UI"
	xmlns:converters="clr-namespace:LayerCake.Generator.UI.Converters;assembly=LayerCake.Generator.UI"
	xmlns:localConverters="clr-namespace:LayerCake.Generator.Converters"
	Icon="{StaticResource AppIcon}"
	WindowStartupLocation="CenterScreen"
	Background="WhiteSmoke"
	Height="640"
	MinHeight="640"
	Width="720"
	MinWidth="720"
	ResizeMode="CanResize">

	<Window.DataContext>
		<viewModels:MainViewModel />
	</Window.DataContext>

	<Window.Resources>

		<converters:NotConverter
			x:Key="NotConverter" />
		<converters:BoolToVisibilityConverter
			x:Key="BoolToVisibilityConverter"  />
		<converters:BoolToVisibilityConverter
			x:Key="BoolToVisibilityConverter_Not"
			Not="True"  />

		<localConverters:ProcessMessageConverter
			x:Key="ProcessMessageConverter" />
		<localConverters:IsErrorConverter
			x:Key="IsErrorConverter" />

		<converters:PercentageToProgressValueConverter
			x:Key="PercentageToProgressValueConverter" />
		<converters:BoolToTaskbarItemProgressState
			x:Key="BoolToTaskbarItemProgressState" />
		<converters:PercentageValueToStringConverter
			x:Key="PercentageValueToStringConverter" />
		<converters:ProgressStatusForegroundConverter
			x:Key="ProgressStatusForegroundConverter" />

	</Window.Resources>

	<Window.TaskbarItemInfo>
		<TaskbarItemInfo
		  ProgressValue="{Binding ProcessPercentage, Mode=OneWay, Converter={StaticResource PercentageToProgressValueConverter}, UpdateSourceTrigger=PropertyChanged}"
		  ProgressState="{Binding WithProcessErrors, Mode=OneWay, Converter={StaticResource BoolToTaskbarItemProgressState}, UpdateSourceTrigger=PropertyChanged}" />
	</Window.TaskbarItemInfo>

	<Grid>

		<DockPanel>

			<Menu
				DockPanel.Dock="Top"
				Background="LightGray">
				<MenuItem
					Header="_File">
					<MenuItem
						Header="_Quit"
						Command="{Binding QuitCommand}">
						<MenuItem.Icon>
							<Image
								Source="{StaticResource ExitImage}" />
						</MenuItem.Icon>
					</MenuItem>
				</MenuItem>
				<MenuItem
					Header="_Options">
					<MenuItem
						x:Name="CheckAutomaticUpdatesMenuItem"
						IsCheckable="True"
						Header="Check Automatic _Updates"
						Click="OnCheckAutomaticUpdatesMenuItemClick">
					</MenuItem>
					<Separator />
					<MenuItem
						x:Name="SendProcessReportsMenuItem"
						IsCheckable="True"
						Header="Send _Process Reports (anonymous)"
						Click="OnSendProcessReportsMenuItemClick">
					</MenuItem>
					<MenuItem
						x:Name="SendErrorReportsMenuItem"
						IsCheckable="True"
						Header="Send _Error Reports (anonymous)"
						Click="OnSendErrorReportsMenuItemClick">
					</MenuItem>
				</MenuItem>
				<MenuItem
					Header="_Extensions"
					IsEnabled="{Binding CanAcceptUserInteraction}">
					<MenuItem
						Header="Generate _Translations"
						Command="{Binding GenerateTranslationsCommand}">
						<MenuItem.Icon>
							<Image
								Source="{StaticResource TranslationsImage}" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem
						Header="Generate _CodeRefs"
						Command="{Binding GenerateCodeRefsCommand}">
						<MenuItem.Icon>
							<Image
								Source="{StaticResource CodeRefsImage}" />
						</MenuItem.Icon>
					</MenuItem>
				</MenuItem>
				<MenuItem
					Header="_?">
					<MenuItem
						Header="_License"
						Click="OnLicenseMenuItemClick">
						<MenuItem.Icon>
							<Image
								Source="{StaticResource LicenseImage}" />
						</MenuItem.Icon>
					</MenuItem>
					<Separator />
					<MenuItem
						Header="_About"
						Click="OnAboutMenuItemClick">
						<MenuItem.Icon>
							<Image
								Source="{StaticResource AboutImage}" />
						</MenuItem.Icon>
					</MenuItem>
				</MenuItem>
			</Menu>

			<Grid>
				<Grid.RowDefinitions>
					<!-- Header / White -->
					<RowDefinition
						Height="Auto" />
					<!-- Header / Grey -->
					<RowDefinition
						Height="Auto" />
					<!-- Tables -->
					<RowDefinition
						Height="2*"
						MinHeight="144" />
					<!-- GridSplitter -->
					<RowDefinition
						Height="Auto" />
					<!-- ProcessLogs -->
					<RowDefinition
						Height="*"
						MinHeight="160" />
					<!-- Buttons -->
					<RowDefinition
						Height="Auto" />
				</Grid.RowDefinitions>

				<!-- Header / White -->
				<Border
					Grid.Row="0"
					Height="70"
					Background="White">

					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition
								Height="Auto" />
							<RowDefinition
								Height="*" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="Auto" />
							<ColumnDefinition
								Width="*" />
						</Grid.ColumnDefinitions>

						<TextBlock
							Grid.Row="1"
							Grid.Column="0"
							Margin="10"
							FontSize="22"
							Text="Code Generation" />

						<Image
							Grid.Row="0"
							Grid.RowSpan="2"
							Grid.Column="1"
							Margin="0 0 10 0"
							HorizontalAlignment="Right"
							VerticalAlignment="Top"
							Height="60"
							Source="{StaticResource LogoImage}"
							Cursor="Hand"
							ToolTipService.ToolTip="Go to LayerCake Generator Website!"
							MouseUp="OnLogoImageClick" />

						<!-- ProgressBar -->
						<ProgressBar
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="2"
							Height="6"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Top"
							Value="{Binding ProcessPercentage}"
							BorderThickness="0"
							Background="Transparent"
							ToolTipService.ToolTip="{Binding ProcessPercentage, Converter={StaticResource PercentageValueToStringConverter}}"
							Foreground="{Binding WithProcessErrors, Converter={StaticResource ProgressStatusForegroundConverter}}" />

					</Grid>

				</Border>

				<!-- Header / Gray -->
				<Border
					Grid.Row="1"
					Height="6"
					Background="Gray" />

				<Border
					Grid.Row="2"
					Margin="10 10 10 2"
					Padding="10"
					BorderBrush="LightGray"
					BorderThickness="1"
					IsEnabled="{Binding CanAcceptUserInteraction}">

					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition 
								Height="Auto" />
							<RowDefinition 
								Height="*" />
							<RowDefinition 
								Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition 
								Width="Auto" />
							<ColumnDefinition 
								Width="*" />
						</Grid.ColumnDefinitions>

						<TextBlock
							Grid.Row="0"
							Grid.Column="0"
							Margin="0 5 0 0"
							Text="Tables to include in the process" />

						<StackPanel
							Grid.Row="0"
							Grid.Column="1"
							HorizontalAlignment="Right"
							Orientation="Horizontal">

							<Button
								Height="22"
								Width="24"
								Command="{Binding ShowExcludedTablesCommand}"
								Visibility="{Binding HasExcludedTables, Converter={StaticResource BoolToVisibilityConverter}}">
								<Button.Content>
									<Image
										Height="16"
										Width="16"
										Source="{StaticResource HelpImage}" />
								</Button.Content>
							</Button>

							<ComboBox
								Margin="5 0 0 0"
								Width="76"
								ItemsSource="{Binding CompilationModes}"
								SelectedItem="{Binding SelectedCompilationMode, Mode=TwoWay}" />

						</StackPanel>

						<!-- Tables -->
						<ListBox
							Grid.Row="1"
							Grid.Column="0"
							Grid.ColumnSpan="2"
							Margin="0 5 0 5"
							ItemsSource="{Binding Tables}">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<CheckBox
										IsChecked="{Binding IsChecked, Mode=TwoWay}"
										Content="{Binding Path=Item.Name}" />
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
						
						<controls:LoadingAnimation
							Grid.Row="1"
							Grid.Column="0"
							Grid.ColumnSpan="2"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Visibility="{Binding OnInitializing, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />

						<CheckBox
							Grid.Row="2"
							Grid.Column="0"
							Margin="7 0 0 0"
							Content="Select none/all"
							IsChecked="{Binding SwitchTableSelectionMode, Mode=TwoWay}" />

						<StackPanel
							Grid.Row="2"
							Grid.Column="1"
							HorizontalAlignment="Right"
							Orientation="Horizontal">

							<CheckBox
								Content="With SQL Procedure Integration"
								IsChecked="{Binding WithSqlProcedureIntegration, Mode=TwoWay}" />
							<CheckBox
								Margin="10 0 0 0"
								Content="With Business Integration"
								IsEnabled="False"
								IsChecked="{Binding WithBusinessIntegration, Mode=TwoWay}" />

						</StackPanel>

					</Grid>

				</Border>

				<GridSplitter
					Grid.Row="3"
					Background="WhiteSmoke"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Center" />

				<Border
					Grid.Row="4"
					Margin="10 5 10 10"
					Padding="10"
					BorderBrush="LightGray"
					BorderThickness="1">

					<ListBox
						ItemsSource="{Binding ProcessLogs}" >
						<ListBox.Resources>
							<Style
								TargetType="{x:Type ListBoxItem}">
								<Style.Triggers>
									<DataTrigger
										Binding="{Binding Type, Converter={StaticResource IsErrorConverter}}"
										Value="True">
										<Setter
											Property="Foreground"
											Value="Red" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</ListBox.Resources>
						<ListBox.ItemTemplate>
							<DataTemplate>
								<Grid
									HorizontalAlignment="Stretch">
									<Grid.ColumnDefinitions>
										<ColumnDefinition 
											Width="Auto" />
										<ColumnDefinition 
											Width="*" />
									</Grid.ColumnDefinitions>
									<TextBlock
										Grid.Column="0"
										Text="{Binding Time}" />
									<TextBlock
										Grid.Column="1"
										Margin="10 0 0 0"
										Text="{Binding ., Converter={StaticResource ProcessMessageConverter}}" />
								</Grid>

							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>

				</Border>

				<!-- Buttons -->
				<Grid
					Grid.Row="5"
					Margin="10 0 10 15">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="*" />
					</Grid.ColumnDefinitions>

					<Button
						Grid.Column="0"
						Width="96"
						Content="Quit"
						Command="{Binding QuitCommand}"
						Visibility="{Binding OnProcessing, Converter={StaticResource BoolToVisibilityConverter_Not}}" />

					<Button
						Grid.Column="0"
						x:Name="CancelButton"
						Width="96"
						Content="Cancel"
						Command="{Binding CancelCommand}"
						Visibility="{Binding OnProcessing, Converter={StaticResource BoolToVisibilityConverter}}" />

					<Button
						Grid.Column="1"
						Width="96"
						Margin="10 0 0 0"
						Content="Clear Logs"
						Command="{Binding ClearLogsCommand}" />

					<Button
						Grid.Column="2"
						Width="96"
						Margin="10 0 0 0"
						Content="Copy Logs"
						Command="{Binding CopyLogsCommand}" />

					<Button
						Grid.Column="3"
						Margin="10 0 0 0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Center"
						Visibility="{Binding CanBeUpdated, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
						Click="OnUpdateAvailableButtonClick">
						<Button.Content>
							<StackPanel
								Orientation="Horizontal">
								<Image
									Source="{StaticResource UpdateImage}" />
								<TextBlock
									Margin="10 0"
									VerticalAlignment="Center"
									Text="{Binding UpdateVersion, Mode=OneWay}" />
							</StackPanel>

						</Button.Content>
					</Button>

					<Button
						Grid.Column="4"
						Width="96"
						HorizontalAlignment="Right"
						Content="Process >>"
						Command="{Binding ProcessCommand}" />

				</Grid>

			</Grid>

		</DockPanel>

	</Grid>

</Window>
